/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SystemAdminWorkArea;

import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import Business.BusinessModel;
import Business.Warehouse.Warehouse;
import Business.Role.AdminRole;
import Business.UserAccount.UserAccount;
import SendEmail.SendEmail;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author nidhitiwari
 */
public class ManageWarehouse extends javax.swing.JPanel {

    /**
     * Creates new form ManageWarehouse
     */
    private JPanel userProcessContainer;
    private BusinessModel business;
    UserAccount user;
    SendEmail sendomail;
    
    public ManageWarehouse(JPanel userProcessContainer, BusinessModel business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.business = business;
        populateManageWarehouseTable();
        btnConfirm.setEnabled(false);
    }
    
    private void populateManageWarehouseTable() {
        DefaultTableModel model = (DefaultTableModel) tblManageWarehouse.getModel();
        
        model.setRowCount(0);
        
        for (UserAccount user : business.getUserAccountDirectory().getUserAccountList()) {
            
            for (Warehouse ware:business.getWarehouseDirectory().getWarehouseList()) {
            if ("Business.Role.AdminRole".equals(user.getRole().getClass().getName()) && ware.getAdminUserName().equals(user.getUsername())) {
                Object[] row = new Object[5];
               
                row[0] = user.getName();
                row[1] = user.getUsername();
                row[2] = user.getPassword();
                row[3] = ware.getWarehouseContact();
                row[4] = ware.getWarehouseAddress();
                
                model.addRow(row);
            }
            }
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        btnBack = new javax.swing.JButton();
        lblManageWarehouseTitle = new javax.swing.JLabel();
        lblWarehouseName = new javax.swing.JLabel();
        txtWarehouseName = new javax.swing.JTextField();
        lblWarehouseUsername = new javax.swing.JLabel();
        txtWarehouseUserName = new javax.swing.JTextField();
        lblWarehousePassword = new javax.swing.JLabel();
        txtWarehousePassword = new javax.swing.JTextField();
        lblWarehouseAddress = new javax.swing.JLabel();
        txtWarehouseAddress = new javax.swing.JTextField();
        lblWarehouseContact = new javax.swing.JLabel();
        txtWarehouseContact = new javax.swing.JTextField();
        btnSubmit = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblManageWarehouse = new javax.swing.JTable();
        btnUpdate = new javax.swing.JButton();
        btnConfirm = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();

        jTextField1.setText("jTextField1");

        btnBack.setBackground(new java.awt.Color(0, 153, 255));
        btnBack.setFont(new java.awt.Font("Lucida Grande", 3, 13)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblManageWarehouseTitle.setFont(new java.awt.Font("Lucida Grande", 3, 18)); // NOI18N
        lblManageWarehouseTitle.setText("Manage Warehouse ");

        lblWarehouseName.setText("Warehouse Name");

        lblWarehouseUsername.setText("Manager Username");

        lblWarehousePassword.setText("Manager Password");

        lblWarehouseAddress.setText("Warehouse Address");

        lblWarehouseContact.setText("Warehouse Contact");

        txtWarehouseContact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtWarehouseContactActionPerformed(evt);
            }
        });

        btnSubmit.setBackground(new java.awt.Color(0, 153, 255));
        btnSubmit.setFont(new java.awt.Font("Lucida Grande", 3, 13)); // NOI18N
        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        tblManageWarehouse.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Warehouse Name", "Username", "Password", "Contact", "Address"
            }
        ));
        jScrollPane1.setViewportView(tblManageWarehouse);

        btnUpdate.setBackground(new java.awt.Color(0, 153, 255));
        btnUpdate.setFont(new java.awt.Font("Lucida Grande", 3, 13)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnConfirm.setBackground(new java.awt.Color(0, 153, 255));
        btnConfirm.setFont(new java.awt.Font("Lucida Grande", 3, 13)); // NOI18N
        btnConfirm.setText("Confirm Update");
        btnConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(204, 51, 0));
        btnDelete.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 672, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addComponent(btnConfirm)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnDelete)
                                .addGap(17, 17, 17))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnBack)
                                .addGap(130, 130, 130))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(173, 173, 173)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblWarehouseUsername)
                                    .addComponent(lblWarehouseName)
                                    .addComponent(lblWarehousePassword)
                                    .addComponent(lblWarehouseContact)
                                    .addComponent(lblWarehouseAddress))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtWarehouseName)
                                    .addComponent(txtWarehouseUserName)
                                    .addComponent(txtWarehousePassword)
                                    .addComponent(txtWarehouseAddress)
                                    .addComponent(txtWarehouseContact, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(79, 79, 79)
                                .addComponent(lblManageWarehouseTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(btnBack)
                .addGap(22, 22, 22)
                .addComponent(lblManageWarehouseTitle)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblWarehouseName)
                    .addComponent(txtWarehouseName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtWarehouseUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblWarehouseUsername))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtWarehousePassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblWarehousePassword))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblWarehouseAddress)
                    .addComponent(txtWarehouseAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblWarehouseContact)
                    .addComponent(txtWarehouseContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete))
                .addContainerGap(45, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void txtWarehouseContactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtWarehouseContactActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtWarehouseContactActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        String name = txtWarehouseName.getText();
        String username=txtWarehouseUserName.getText();
        String password=txtWarehousePassword.getText();
        String address=txtWarehouseAddress.getText();
        String contact=txtWarehouseContact.getText();
        Pattern pattern = Pattern.compile("^[a-zA-Z'\\-\\s]+$");

        try {
            if(name==null || name.isEmpty()){

                throw new NullPointerException("Name cannot be empty");

            } else if (pattern.matcher(name).find() == false){

                throw new Exception("Please enter valid  Name");

            }
        } catch(NullPointerException e){

            JOptionPane.showMessageDialog(null, "Name is empty");

            return;

        } catch (Exception e){

            JOptionPane.showMessageDialog(null, "Name is invalid");

            return;
        }

        try {
            if(username==null || username.isEmpty()){

                throw new NullPointerException("User Name cannot be empty");

            } else if (username.length()<3){
                throw new Exception("Please enter valid User Name");

            }
        } catch(NullPointerException e){

            JOptionPane.showMessageDialog(null, "User Name is Empty");

            return;

        }catch (Exception e){

            JOptionPane.showMessageDialog(null, "User Name is invalid");

            return;
        }

        try {

            if(password==null || password.isEmpty()){

                throw new NullPointerException("Password cannot be empty");

            } else if (Pattern.matches("^(?=(.*[a-z]){1,})(?=(.*[\\d]){1,})(?=(.*[\\W]){1,})(?!.*\\s).{5,30}$", password)==false){

                throw new Exception("Invalid Password");
            }

        }  catch(NullPointerException e){

            JOptionPane.showMessageDialog(null, "Password is Empty");

            return;
        } catch (Exception e) {

            JOptionPane.showMessageDialog(null, "Password is invalid");

            return;
        }

        if (business.getUserAccountDirectory().checkIfUsernameIsUnique(username)==false) {
            JOptionPane.showMessageDialog(null,"User Name already exists ");
        }else{

            UserAccount ua1 =business.getUserAccountDirectory().createUserAccount(name,username,password,null, new AdminRole());
            Warehouse ware= business.getWarehouseDirectory().createWarehouseInfo(name, username, address, contact);
            populateManageWarehouseTable();
            SendEmail se = new SendEmail(username, "Warehouse Registration");
            se.sendEmailToUsers(username, "Warehouse Registration");
            JOptionPane.showMessageDialog(null,"Email has been sent to give Username. Please check");

            txtWarehouseName.setText("");
            txtWarehouseUserName.setText("");
            txtWarehousePassword.setText("");
            txtWarehouseAddress.setText("");
            txtWarehouseContact.setText("");
        }
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        int selectRow = tblManageWarehouse.getSelectedRow();

        if(selectRow>=0){
            String username= (String) tblManageWarehouse.getValueAt(selectRow, 1);
            String pwd= (String) tblManageWarehouse.getValueAt(selectRow, 2);
            user=business.getUserAccountDirectory().authenticateUser(username, pwd);

            txtWarehouseName.setText(user.getName()+"");
            txtWarehouseUserName.setText(user.getUsername()+"");
            txtWarehousePassword.setText(user.getPassword()+"");

        }
        else {
            JOptionPane.showMessageDialog(null,"Please select a row");
        }

        btnSubmit.setEnabled(false);
        btnDelete.setEnabled(false);
        btnUpdate.setEnabled(false);
        btnConfirm.setEnabled(true);
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmActionPerformed
        // TODO add your handling code here:
        String name = txtWarehouseName.getText();
        String username=txtWarehouseUserName.getText();
        String password=txtWarehousePassword.getText();

        Pattern pattern = Pattern.compile("^[a-zA-Z'\\-\\s]+$");

        try {
            if(name==null || name.isEmpty()){

                throw new NullPointerException("Name cannot be empty");

            } else if (pattern.matcher(name).find() == false){

                throw new Exception("Please enter valid  Name");

            }
        } catch(NullPointerException e){

            JOptionPane.showMessageDialog(null, "Name is empty");

            return;

        } catch (Exception e){

            JOptionPane.showMessageDialog(null, "Name is invalid");

            return;
        }

        try {
            if(username==null || username.isEmpty()){

                throw new NullPointerException("User Name cannot be empty");

            } else if (username.length()<3){
                throw new Exception("Please enter valid User Name");

            }
        } catch(NullPointerException e){

            JOptionPane.showMessageDialog(null, "User Name is Empty");

            return;

        }catch (Exception e){

            JOptionPane.showMessageDialog(null, "User Name is invalid");

            return;
        }

        business.getUserAccountDirectory().updateUserAccount(user,name,username,password);
        populateManageWarehouseTable();
        btnSubmit.setEnabled(true);
        btnDelete.setEnabled(true);
        btnUpdate.setEnabled(true);
        btnConfirm.setEnabled(false);
        txtWarehouseName.setText("");
        txtWarehouseUserName.setText("");
        txtWarehousePassword.setText("");
    }//GEN-LAST:event_btnConfirmActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblManageWarehouse.getSelectedRow();
        if(selectedRow>=0){
            int selectionButton = JOptionPane.YES_NO_OPTION;
            int selectionResult = JOptionPane.showConfirmDialog(null, "Confirm Delete ? ","Warning",selectionButton);
            if(selectionResult == JOptionPane.YES_OPTION){
                String username= (String) tblManageWarehouse.getValueAt(selectedRow, 1);
                String pwd= (String) tblManageWarehouse.getValueAt(selectedRow, 2);
                UserAccount user=business.getUserAccountDirectory().authenticateUser(username, pwd);

                business.getUserAccountDirectory().deleteUserAccount(user);
//                business.getCustomerDirectory().deleteCustomer(user.getUsername());
                business.getWarehouseDirectory().deleteWarehouse(username);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a Row to delete!");
        }
        populateManageWarehouseTable();
    }//GEN-LAST:event_btnDeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnConfirm;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel lblManageWarehouseTitle;
    private javax.swing.JLabel lblWarehouseAddress;
    private javax.swing.JLabel lblWarehouseContact;
    private javax.swing.JLabel lblWarehouseName;
    private javax.swing.JLabel lblWarehousePassword;
    private javax.swing.JLabel lblWarehouseUsername;
    private javax.swing.JTable tblManageWarehouse;
    private javax.swing.JTextField txtWarehouseAddress;
    private javax.swing.JTextField txtWarehouseContact;
    private javax.swing.JTextField txtWarehouseName;
    private javax.swing.JTextField txtWarehousePassword;
    private javax.swing.JTextField txtWarehouseUserName;
    // End of variables declaration//GEN-END:variables
}
