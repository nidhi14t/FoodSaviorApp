/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SystemAdminWorkArea;

import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JPanel;
import Business.BusinessModel;
import Business.Role.DistAdminRole;
import javax.swing.table.DefaultTableModel;
import Business.Distributor.Distributor;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/**
 *
 * @author karpe.s@northeastern.edu
 */
public class ManageDistributor extends javax.swing.JPanel {
    
    private JPanel userProcessContainer;
    private BusinessModel business;
    UserAccount user;
    
    public ManageDistributor(JPanel userProcessContainer, BusinessModel business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.business = business;
        populateManageDistributorTable();
        confirmBtn.setEnabled(false);
    }
    
    private void populateManageDistributorTable() {
        DefaultTableModel model = (DefaultTableModel) tblManageDist.getModel();
        
        model.setRowCount(0);
        
        for (UserAccount user : business.getUserAccountDirectory().getUserAccountList()) {
            
            for (Distributor dist:business.getDistributorDirectory().getDistributorList()) {
            if ("Business.Role.DistAdminRole".equals(user.getRole().getClass().getName()) && dist.getDistAdminUserName().equals(user.getUsername())) {
                
                Object[] row = new Object[5];
               
                row[0] = user.getName();
                row[1] = user.getUsername();
                row[2] = user.getPassword();
                row[3] = dist.getDistributorContact();
                row[4] = dist.getDistributorAddress();
                model.addRow(row);
            }
            }
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        backBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        dnametxt = new javax.swing.JTextField();
        mnametxt = new javax.swing.JTextField();
        mpasstxt = new javax.swing.JTextField();
        distAddresstxt = new javax.swing.JTextField();
        distContcttxt = new javax.swing.JTextField();
        submitBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblManageDist = new javax.swing.JTable();
        updateBtn = new javax.swing.JButton();
        confirmBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Manage Distributor");

        backBtn.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        backBtn.setText("Back");
        backBtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        jLabel2.setText("Distributor Name");

        jLabel3.setText("Manager Username");

        jLabel4.setText("Manager Password");

        jLabel5.setText("Distributor Address");

        jLabel6.setText("Distributor Contact");

        dnametxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dnametxtActionPerformed(evt);
            }
        });

        mnametxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnametxtActionPerformed(evt);
            }
        });

        mpasstxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mpasstxtActionPerformed(evt);
            }
        });

        distAddresstxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                distAddresstxtActionPerformed(evt);
            }
        });

        distContcttxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                distContcttxtActionPerformed(evt);
            }
        });

        submitBtn.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        submitBtn.setText("Submit");
        submitBtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        submitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitBtnActionPerformed(evt);
            }
        });

        tblManageDist.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Distributor Name", "Username", "Password", "Contact", "Address"
            }
        ));
        jScrollPane1.setViewportView(tblManageDist);

        updateBtn.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        updateBtn.setText("Update");
        updateBtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        confirmBtn.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        confirmBtn.setText("Confirm Update");
        confirmBtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        confirmBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmBtnActionPerformed(evt);
            }
        });

        deleteBtn.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        deleteBtn.setText("Delete");
        deleteBtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(171, 171, 171)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(235, 235, 235)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(distContcttxt, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE)
                            .addComponent(distAddresstxt)
                            .addComponent(mpasstxt)
                            .addComponent(mnametxt)
                            .addComponent(dnametxt)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(341, 341, 341)
                        .addComponent(submitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(115, 115, 115)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 672, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(confirmBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(119, 119, 119))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dnametxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mnametxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mpasstxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(distAddresstxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(distContcttxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addComponent(submitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(35, 35, 35)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(confirmBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(67, 67, 67))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void mnametxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnametxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mnametxtActionPerformed

    private void mpasstxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mpasstxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mpasstxtActionPerformed

    private void distAddresstxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_distAddresstxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_distAddresstxtActionPerformed

    private void distContcttxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_distContcttxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_distContcttxtActionPerformed

    private void submitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitBtnActionPerformed
        String name = dnametxt.getText();
        String username = mnametxt.getText();
        String password = mpasstxt.getText();
        String address = distAddresstxt.getText();
        String contact = distContcttxt.getText();
        Pattern pattern = Pattern.compile("^[a-zA-Z'\\-\\s]+$");
              
        try {
             if(name==null || name.isEmpty()){
                throw new NullPointerException("Name cannot be empty");
            } else if (pattern.matcher(name).find() == false){
                throw new Exception("Please enter valid  Name");
            }
        } catch(NullPointerException e){
            JOptionPane.showMessageDialog(null, "Name cannot be empty");
            return;
            
        } catch (Exception e){
            JOptionPane.showMessageDialog(null, "Please enter valid  Name");
            return;
        }
        
        try {
             if(username==null || username.isEmpty()){
                throw new NullPointerException("User Name cannot be empty");
            } else if (username.length()<3){
                throw new Exception("Please enter valid User Name");
            }
        } catch(NullPointerException e){
            JOptionPane.showMessageDialog(null, "User Name cannot be empty");
            return;
        }catch (Exception e){
            JOptionPane.showMessageDialog(null, "User Name is invalid");
            return;
        }
        
         try {
            if(password==null || password.isEmpty()){
                throw new NullPointerException("Password cannot be empty");
            } else if (Pattern.matches("^(?=(.*[a-z]){1,})(?=(.*[\\d]){1,})(?=(.*[\\W]){1,})(?!.*\\s).{5,30}$", password)==false){
                throw new Exception("Invalid Password");
            }
        }  catch(NullPointerException e){       
             JOptionPane.showMessageDialog(null, "Password is Empty");
             return;
        } catch (Exception e) {
             JOptionPane.showMessageDialog(null, "Password is invalid");
             return;
        }
           
        if (business.getUserAccountDirectory().checkIfUsernameIsUnique(username)==false) {
            JOptionPane.showMessageDialog(null,"User Name already exists ");
        }else{
            
        UserAccount uacc =business.getUserAccountDirectory().createUserAccount(name,username,password,null, new DistAdminRole());
        Distributor dist= business.getDistributorDirectory().createDistributorInfo(name, username, address, contact);
        populateManageDistributorTable();
        
        dnametxt.setText("");
        mnametxt.setText("");
        mpasstxt.setText("");
        distAddresstxt.setText("");
        distContcttxt.setText("");
        }
    }//GEN-LAST:event_submitBtnActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        int selectRow = tblManageDist.getSelectedRow();

        if(selectRow>=0){
            String username= (String) tblManageDist.getValueAt(selectRow, 1);
            String pwd= (String) tblManageDist.getValueAt(selectRow, 2);
            user=business.getUserAccountDirectory().authenticateUser(username, pwd);

            dnametxt.setText(user.getName()+"");
            mnametxt.setText(user.getUsername()+"");
            mpasstxt.setText(user.getPassword()+"");

        }
        else {
            JOptionPane.showMessageDialog(null,"Please select a row");
        }

        submitBtn.setEnabled(false);
        deleteBtn.setEnabled(false);
        updateBtn.setEnabled(false);
        confirmBtn.setEnabled(true);
    }//GEN-LAST:event_updateBtnActionPerformed

    private void confirmBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmBtnActionPerformed
        String name = dnametxt.getText();
        String username=mnametxt.getText();
        String password=mpasstxt.getText();

        Pattern pattern = Pattern.compile("^[a-zA-Z'\\-\\s]+$");
              
        try {
             if(name==null || name.isEmpty()){
                throw new NullPointerException("Name cannot be empty");
            } else if (pattern.matcher(name).find() == false){
                throw new Exception("Please enter valid  Name");
            }
        } catch(NullPointerException e){
            JOptionPane.showMessageDialog(null, "Name is empty");
            return;
        } catch (Exception e){
            JOptionPane.showMessageDialog(null, "Name is invalid");
            return;
        }
        
        try {
             if(username==null || username.isEmpty()){
                throw new NullPointerException("User Name cannot be empty");
            } else if (username.length()<3){
                throw new Exception("Please enter valid User Name");
            }
        } catch(NullPointerException e){
            JOptionPane.showMessageDialog(null, "User Name is Empty");
            return;
        }catch (Exception e){
            JOptionPane.showMessageDialog(null, "User Name is invalid");
            return;
        }
        
            business.getUserAccountDirectory().updateUserAccount(user,name,username,password);
            populateManageDistributorTable();
            submitBtn.setEnabled(true);
            deleteBtn.setEnabled(true);
            updateBtn.setEnabled(true);
            confirmBtn.setEnabled(false);
            dnametxt.setText("");
            mnametxt.setText("");
            mpasstxt.setText("");
    }//GEN-LAST:event_confirmBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        int selectedRow = tblManageDist.getSelectedRow();
        if(selectedRow>=0){
            int selectionButton = JOptionPane.YES_NO_OPTION;
            int selectionResult = JOptionPane.showConfirmDialog(null, "Confirm Delete ? ","Warning",selectionButton);
            if(selectionResult == JOptionPane.YES_OPTION){
                String username= (String) tblManageDist.getValueAt(selectedRow, 1);
                String pwd= (String) tblManageDist.getValueAt(selectedRow, 2);
                UserAccount user=business.getUserAccountDirectory().authenticateUser(username, pwd);

                business.getUserAccountDirectory().deleteUserAccount(user);
                business.getCustomerDirectory().deleteCustomer(user.getUsername());
                business.getDistributorDirectory().deleteDistributor();
                business.getDistributorDirectory().deleteDistributor(username);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a Row to delete!");
        }
        populateManageDistributorTable();
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed

    private void dnametxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dnametxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dnametxtActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JButton confirmBtn;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JTextField distAddresstxt;
    private javax.swing.JTextField distContcttxt;
    private javax.swing.JTextField dnametxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField mnametxt;
    private javax.swing.JTextField mpasstxt;
    private javax.swing.JButton submitBtn;
    private javax.swing.JTable tblManageDist;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}
